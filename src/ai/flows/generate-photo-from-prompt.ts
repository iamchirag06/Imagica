// This file is generated by Firebase Studio.
'use server';
/**
 * @fileOverview A photo generation AI agent.
 *
 * - generatePhotoFromPrompt - A function that handles the photo generation process.
 * - GeneratePhotoFromPromptInput - The input type for the generatePhotoFromPrompt function.
 * - GeneratePhotoFromPromptOutput - The return type for the generatePhotoFromPrompt function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const GeneratePhotoFromPromptInputSchema = z.object({
  prompt: z.string().describe('The prompt to generate a photo from.'),
});
export type GeneratePhotoFromPromptInput = z.infer<
  typeof GeneratePhotoFromPromptInputSchema
>;

const GeneratePhotoFromPromptOutputSchema = z.object({
  photoDataUri: z
    .string()
    .describe(
      'The generated photo as a data URI that must include a MIME type and use Base64 encoding. Expected format: \'data:<mimetype>;base64,<encoded_data>\'.' 
    ),
});
export type GeneratePhotoFromPromptOutput = z.infer<
  typeof GeneratePhotoFromPromptOutputSchema
>;

export async function generatePhotoFromPrompt(
  input: GeneratePhotoFromPromptInput
): Promise<GeneratePhotoFromPromptOutput> {
  return generatePhotoFromPromptFlow(input);
}

const generatePhotoFromPromptFlow = ai.defineFlow(
  {
    name: 'generatePhotoFromPromptFlow',
    inputSchema: GeneratePhotoFromPromptInputSchema,
    outputSchema: GeneratePhotoFromPromptOutputSchema,
  },
  async input => {
    const {media} = await ai.generate({
      // IMPORTANT: ONLY the googleai/gemini-2.0-flash-exp model is able to generate images. You MUST use exactly this model to generate images.
      model: 'googleai/gemini-2.0-flash-exp',

      // simple prompt
      prompt: input.prompt,

      config: {
        responseModalities: ['TEXT', 'IMAGE'], // MUST provide both TEXT and IMAGE, IMAGE only won't work
      },
    });

    return {photoDataUri: media.url!};
  }
);
